variant pin-error {
  unexpected-error(string),
}

enum mode {
  output,
  input,
  input-pullup,
  input-pulldown,
}

enum logic-level {
  low,
  high,
}

/// A numbered pin that can be used for input or output.
resource pin {
  /// Configure the pin with the specified number for the specified mode.
  static new: func(number: u8, mode: mode) -> expected<pin, pin-error>

  /// Get the current mode.
  mode: func() -> mode
  /// Reconfigure the mode.
  set-mode: func(mode: mode) -> unit

  /// Whether the pin is configured for output.
  is-output: func() -> bool
  /// Output the given logic level. Does nothing unless the pin is configured for output.
  write: func(level: logic-level) -> unit

  /// Whether the pin is configured for input.
  is-input: func() -> bool
  /// Read the level from the pin. The result is unspecified unless the pin is configured for input.
  read: func() -> logic-level
}
